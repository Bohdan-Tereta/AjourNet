@model AjourBT.Domain.ViewModels.BusinessTripViewModel
@{
    ViewBag.Title = "EditReportedFinishedBT";
    Layout = null;
}
<script>
    $(function () {
        $("#CancelBTbyPU")
          .button()
          .click(function (event) {
              event.preventDefault();
          });
    });
</script>

<script type="text/javascript">
    $(document).on("change", "#orderStartDateFinishedBTPU, #orderEndDateFinishedBTPU", function (event) {
        Calculate();
    });
    function Calculate() {
        var StartDate = document.getElementById('orderStartDateFinishedBTPU').value;
        var EndDate = document.getElementById('orderEndDateFinishedBTPU').value;
        var parts1 = StartDate.split('.');
        var parts2 = EndDate.split('.');
        // this will split your string into date parts, eg. 11/30/2012 would result as an array ['11','30','2012'];
        var date1 = new Date(parts1[2], parts1[1]-1, parts1[0]);
        var date2 = new Date(parts2[2], parts2[1]-1, parts2[0]);
        var msecPerMinute = 1000 * 60;
        var msecPerHour = msecPerMinute * 60;
        var msecPerDay = msecPerHour * 24;
        var StartDateMsec = date1.getTime();
        var EndDateMsec = date2.getTime();
        var interval = EndDateMsec - StartDateMsec;
        var days = Math.round(interval / msecPerDay) + 1;
        document.getElementById('daysInBTForOrderFinishedBTPU').value = days;
    }
    $(document).on("change", "#orderStartDateFinishedBTPU, #orderEndDateFinishedBTPU", function (event) {
        Calculate();
    });
</script>
<script type="text/javascript">
    clearTimeout(timer);
    timer = window.setTimeout(function () { location.reload(); }, timeout);
</script>

<div id="ModelError" style="max-width: 400px; color: red"></div>

<h4>@ViewBag.EmployeeInformation</h4>


@using (Html.BeginForm("EditFinishedBT", "PU", FormMethod.Post, new { id = "editFinishedBTForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.EmployeeID)
    @Html.HiddenFor(model => model.BusinessTripID)
    @Html.Hidden("Status", Model.Status)
    @Html.HiddenFor(model => model.RowVersion)
    <input type="hidden" name="selectedDepartment" value="@ViewBag.SelectedDepartment" />

    <fieldset>
        <legend>BusinessTrip</legend>

        <table id="orderTable">
            <tr>
                <td id="col1"><b>From </b></td>
                <td id="col11">
                    @Html.TextBoxFor(model => model.StartDate, new { id = "editStartDateFinishedBTPU", @readonly = true, @class = "editorForCalendar" })
                    <br />        @Html.ValidationMessageFor(model => model.StartDate)
                </td>
                <td id="col2"><b>Order From</b></td>
                <td id="col22">
                    @Html.TextBoxFor(model => model.OrderStartDate, new { id = "orderStartDateFinishedBTPU", @readonly = false, @class = "editorForCalendar" })
                    <br /> @Html.ValidationMessageFor(model => model.OrderStartDate)
                </td>
                
            <tr>
                <td id="col1"><b>To </b></td>
                <td id="col11">
                    @Html.TextBoxFor(model => model.EndDate, new { id = "editEndDateFinishedBTPU", @readonly = true, @class = "editorForCalendar" })
                     
                                </td>
                          
                <td id="col2"><b>Order To</b></td>
                <td id="col22">
                    @Html.TextBoxFor(model => model.OrderEndDate, new { id = "orderEndDateFinishedBTPU", @readonly = false, @class = "editorForCalendar" })
                  
                </td>
            </tr>
           
             <tr>
                 <td colspan="2">  @Html.ValidationMessageFor(model => model.EndDate)</td>
                 <td colspan="4">  @Html.ValidationMessageFor(model => model.OrderEndDate)</td>
                    </tr>
            <tr>
                <td id="col1"><b>Location </b></td>
                <td id="col11">
                    @Html.DropDownList("LocationID", (SelectList)ViewBag.LocationsList)
                    <br /> @Html.ValidationMessageFor(model => model.LocationID)
                </td>
                <td id="col2"><b>Number Of Days</b></td>
                <td id="col22">@Html.TextBoxFor(model => model.DaysInBTForOrder, new { id = "daysInBTForOrderFinishedBTPU", @readonly = true, @class = "forCalcDays" })</td>
            </tr> 

            <tr>
                <td ><b>Unit </b></td>
                <td >
                    @Html.DropDownList("UnitID", (SelectList)ViewBag.UnitsList)
                    <br /> @Html.ValidationMessageFor(model => model.UnitID)
                </td>
                
            </tr>
        </table>




        <table >
            <tr>
                <td><b>Purpose </b></td>
                <td>    
                    @Html.EditorFor(model => model.Purpose)
                        <br />
                    @Html.ValidationMessageFor(model => model.Purpose)
                </td> 

            </tr>
            <tr>
                <td><b>Manager </b></td>
                <td> 
                    @Html.EditorFor(model => model.Manager)
                    <br />
                    @Html.ValidationMessageFor(model => model.Manager)
                </td>
            </tr>
            <tr>
                <td><b>Responsible </b></td>
                <td>
                    @Html.EditorFor(model => model.Responsible) 
                    <br />
                    @Html.ValidationMessageFor(model => model.Responsible)
                </td>
            </tr>

            </table>

        <table >

            @if (Model.Comment != null)
            {
                <tr>
                    <td><b>Comment</b><br>@Html.TextAreaFor(model => model.Comment, new {@class = "textAreaPU" })</td>
                </tr>
            }
            @if (Model.BTMComment != null)
            {
                <tr>
                    <td><b>BTM's Comment </b><br>@Html.TextAreaFor(model => model.BTMComment, new {@class = "textAreaPU" })</td>
                </tr>
            } 
            @if (Model.CancelComment != null)
            {
                <tr>
                    <td><b>Cancel Comment </b><br>@Html.TextAreaFor(model => model.CancelComment, new {@class = "textAreaPU" })</td>
                </tr>
            }
            @if (Model.AccComment != null)
            {
            <tr>
                <td>
                    @Html.LabelFor(model => model.AccComment)
                    <br />
                    @Html.TextAreaFor(model => model.AccComment, new { @class = "textAreaPU" })
                    <br />
                    @Html.ValidationMessageFor(model => model.AccComment)
                </td>
            </tr> 
            }            
            @if (Model.RejectComment != null)
            {
            <tr>
                <td><b>Cancel Comment </b><br>@Html.TextAreaFor(model => model.RejectComment, new { @class = "textAreaPU" })</td>
            </tr>
            }    
            <tr>
                <td>
                    @Html.LabelFor(model => model.Invitation)
                    @Html.EditorFor(model => model.Invitation)
                    @Html.ValidationMessageFor(model => model.Invitation)
                </td>
            </tr>
            <tr>
                <td>
                    <b>Habitation </b><br>@Html.TextAreaFor(model => model.Habitation, new {@class = "textAreaPU" })
                    @Html.EditorFor(model => model.HabitationConfirmed)
                </td>
            </tr>

            <tr>
                <td>
                <b>Flights </b><br>@Html.TextAreaFor(model => model.Flights, new {@class = "textAreaPU" })
                    @Html.EditorFor(model => model.FlightsConfirmed)
                </td> 
            </tr>
        </table>
    </fieldset> 
    <div style="float: left; margin-top:10px">
    <button id="btnSaveFinished" type="submit">
        Change BT
    </button>
</div>
}



<p style="text-align:right">
    <em>@Html.DisplayLastCRUD(Model.LastCRUDedBy, Model.LastCRUDTimestamp)</em>
</p>



