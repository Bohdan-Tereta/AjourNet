@model IEnumerable<AjourBT.Domain.Entities.Employee>

@{
    Layout = null;
}

@{
    ViewBag.Title = "Visa Data for BTM";
    string searchString = ViewBag.SearchString;
    MvcHtmlString name;
}
<div id="visaTableForBTM">
    <table class="visasViewBTM" id="visasView">
        <colgroup class="visaTableColumns">
            <col class="visaCol1" />
            <col class="visaCol2" />
            <col class="visaCol3" />
            <col class="visaCol4" />
            <col class="visaCol5" />
            <col class="visaCol6" />
            <col class="visaCol7" />
            <col class="visaCol8" />
            <col class="visaCol9" />
            <col class="visaCol10" />
            <col class="visaCol11" />
            <col class="visaCol12" />
            <col class="visaCol13" />
        </colgroup>
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.EID)
                </th>
                <th>
                    Name
                </th>
                <th>
                    @Html.Label("Pass")
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Visa.VisaType)
                </th>
                <th>
                    Visa From - To
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Visa.Entries)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Visa.Days)
                </th>
                <th>
                    @Html.Label("Ins")
                </th>
                <th>
                    @Html.Label("Reg")
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Permit.Number)
                </th>
                <th>
                    Permit From - To
                </th>
                <th>
                    Last BT
                </th>
                <th>
                    Status
                </th>
            </tr>
        </thead>
        <tbody id="VisasViewBody">
            @foreach (var item in Model)
            {
                <tr id="Data-@item.EmployeeID" style="height:20px; font-size:0.9em" class="indexBT">
                    <td>
                        @Html.DisplayFor(modelItem => item.EID)
                    </td>

                    @{
                name = Html.CustomDisplayNameOfEmployee(item);
                    }

                    <td>
                        @name
                    </td>

                    <td style="text-align:center">
                        @Html.CheckBox("HasPassport", item.Passport != null ? true : false, new { id = "HasPassport", value = item.EmployeeID })
                        &nbsp;
                        @Html.CustomDisplayPassportsActionLink(item.Passport, searchString)
                    </td>
                    @if (item.Visa != null)
                    {
                        <td>
                            @Html.DisplayFor(model => item.Visa.VisaType)
                        </td>
                        <td>
                            @Html.CustomDisplayVisaStartAndDueDates(item.Visa, "/BTM/VisaEdit/" + item.EmployeeID + "?searchString=" + searchString)
                        </td>
                        if (item.Visa.Entries == 0)
                        {
                            <td>
                                MULT
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(model => item.Visa.Entries)
                                (@Html.DisplayFor(model => ((item.Visa.EntriesUsedInPrivateTrips + item.Visa.EntriesUsedInBT + item.Visa.CorrectionForVisaEntries).Value)))
                            </td>
                        }

                        <td>
                            @Html.DisplayFor(model => item.Visa.Days)
                            @*(@Html.DisplayFor(model => ((item.Visa.DaysUsedInPrivateTrips + item.Visa.DaysUsedInBT + item.Visa.CorrectionForVisaDays).Value)))*@
                        </td>
                    }
                    else if (item.Passport != null)
                    {
                        <td @**@></td>
                        <td><a id="CreateVisa" href="/BTM/VisaCreate/@item.EmployeeID?searchString=@ViewBag.SearchString" data-date-format="@ViewBag.JSDatePattern" style="width:100%"> Add Visa </a></td>
                        <td></td>
                        <td></td>
                    }
                    else
                    {
                        <td @**@></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    }

                    @if (item.Insurance != null)
                    {
                        <td>
                            @Html.CustomDisplayInsuranceEndDate(item.Insurance, "/BTM/InsuranceEdit/" + item.EmployeeID + "?searchString=" + searchString)
                        </td>
                    }
                    else
                    {
                        <td>
                            <a class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" id="CreateInsurance" href="/BTM/InsuranceCreate/@item.EmployeeID?searchString=@ViewBag.SearchString" data-date-format="@ViewBag.JSDatePattern" style="width:100%">Add Ins</a>
                         </td>

                    }


                    @if (item.VisaRegistrationDate != null)
                    {
                        if (item.VisaRegistrationDate.RegistrationDate == null && item.VisaRegistrationDate.PaymentDate != null)
                        {
                            <td style="color:red">
                                @Html.ActionLink(item.VisaRegistrationDate.PaymentDate.Value.ToShortDateString(), "VisaRegEdit", "BTM", new { id = item.EmployeeID, searchString = ViewBag.SearchString }, new { @class = "visaRegistrationDateEdit", data_date_format = ViewBag.JSDatePattern })
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.ActionLink(item.VisaRegistrationDate.RegistrationDate.Value.ToShortDateString(), "VisaRegEdit", "BTM", new { id = item.EmployeeID, searchString = ViewBag.SearchString }, new { @class = "visaRegistrationDateEdit", data_date_format = ViewBag.JSDatePattern })
                            </td>
                        }
                    }
                    else
                    {
                        <td>
                            <a class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" id="CreateVisaRegistrationDate" href="/BTM/VisaRegCreate/@item.EmployeeID?searchString=@ViewBag.SearchString" data-date-format="@ViewBag.JSDatePattern" style="width:100%">  Add </a>
                        </td>
                    }

                    @if (item.Permit != null)
                    {
                        if (item.Permit.Number != null || item.Permit.StartDate != null || item.Permit.EndDate != null)
                        {
                            <td>
                                @Html.DisplayFor(model => item.Permit.Number)
                            </td>
                            <td>
                                @if (item.Permit.IsKartaPolaka)
                                {
                                    @Html.ActionLink("Karta Polaka", "PermitEdit", "BTM", new { id = item.EmployeeID, searchString = ViewBag.SearchString }, new { @class = "permitEditDialog", data_date_format = ViewBag.JSDatePattern })
                                    <br />
                                    <span id="size0_8">
                                        @if (item.Permit.StartDate != null)
                                        {
                                            @Html.CustomDisplayDateTime(item.Permit.StartDate.Value)
                                        }
                                        @if (item.Permit.EndDate != null)
                                        {
                                            @:-
                                            @Html.CustomDisplayDateTime(item.Permit.EndDate.Value)
                                        }
                                    </span>
                                }
                                else
                                {
                                    @Html.ActionLink(item.Permit.StartDate.Value.ToShortDateString() + " - " + item.Permit.EndDate.Value.ToShortDateString(), "PermitEdit", "BTM", new { id = item.EmployeeID, searchString = ViewBag.SearchString }, new { @class = "permitEditDialog", data_date_format = ViewBag.JSDatePattern })
                                }

                            </td>
                        }
                        else
                        {
                            <td></td>
                            <td>
                                @if (item.Permit.IsKartaPolaka == true && item.Permit.Number == null && item.Permit.StartDate == null && item.Permit.EndDate == null)
                                {
                                    @Html.ActionLink("Karta Polaka", "PermitEdit", "BTM", new { id = item.EmployeeID, searchString = ViewBag.SearchString }, new { @class = "permitEditDialog", data_date_format = ViewBag.JSDatePattern })
                                }
                            </td>
                        }
                    }
                    else
                    {
                        <td @*colspan="2"*@></td>
                        <td><a class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" id="CreatePermit" href="/BTM/PermitCreate/@item.EmployeeID?searchString=@ViewBag.SearchString" data-date-format="@ViewBag.JSDatePattern" style="width:100%"> Add Permit </a></td>
                    }
                    <td class="lastBTColoumnForBTM">
                        @if (item.BusinessTrips != null)
                        {
                            BusinessTrip lastBT = Html.GetLastBT(item);
                            if (lastBT != null)
                            {
                                @*@Html.ActionLink(lastBT.Location.Title + ":" + lastBT.StartDate.ToString("dd.MM") + "-" + lastBT.EndDate.ToString("dd.MM"), "ShowBTData", new { id = lastBT.BusinessTripID })*@
                                <a id="ShowBTDataBTM" href="/BusinessTrip/ShowBTData/@lastBT.BusinessTripID">@lastBT.Location.Title:@lastBT.StartDate.ToString("dd.MM.yy")-@lastBT.EndDate.ToString("dd.MM.yy")</a>
                            }
                        }
                    </td>

                    <td>@Html.CustomDisplayPermitStatus(item)</td>

                </tr>
            }
        </tbody>
    </table>
</div>


<div id="permitDialog-edit" style="display: none"></div>

<script type="text/javascript">
    $(document).ready(function () {
        sortTable = $('#visasView').DataTable({
            "sScrollY": (0.6 * $(window).height()),
            "bPaginate": false,
            "bDestroy": true,
            "bFilter": false,
            "bScrollCollapse": true,
            "aaSorting": [],
            "aoColumns": [
                null,
                null,
                { "bSortable": false },
                null,
                { "sType": "date" },
                null,
                { "sType": "numOverNull" },
                { "sType": "date" },
                 { "sType": "date" },
                { "sType": "visaNum" },
                { "sType": "date" },
                { "sType": "shortdate" },
                { "sType": "string" },
            ]
        });

        jQuery.fn.dataTableExt.oSort['shortdate-pre'] = function (a) {

            var leftTag = a.search(">");
            var endTag = a.search("</a>");

            var extrText = a.substr(leftTag + 1, endTag - 1);

            if (extrText != "") {
                for (var i = 0; i < extrText.length ; i++) {
                    var numPos = jQuery.isNumeric(extrText.charAt(i));
                    if (numPos) {
                        numPos = i;
                        break;
                    }
                }

                var dashPos = extrText.search("-");
                var date = extrText.substr(numPos, dashPos - numPos);
                var toDate = jQuery.datepicker.parseDate("dd.mm.y", date);

                return toDate;
            }
            return "";
        }

        jQuery.fn.dataTableExt.oSort['shortdate-asc'] = function (x, y) {

            var retVal;

            if (x == y) retVal = 0;
            else if (x == "" || x == "&nbsp;") retVal = 1;
            else if (y == "" || y == "&nbsp;") retVal = -1;
            else if (x > y) retVal = 1;
            else retVal = -1;

            return retVal;
        }

        jQuery.fn.dataTableExt.oSort['shortdate-desc'] = function (x, y) {

            return ((x < y) ? 1 : ((x > y) ? -1 : 0));
        }

        jQuery.fn.dataTableExt.oSort['visaNum-pre'] = function (a) {

            if (a != "") {
                var slashPos = a.search('/');
                var year = a.substr(slashPos, a.length);
                var num = a.substr(0, slashPos);

                var compareNum = year + num;
                return compareNum;
            }

            return "";
        }

        jQuery.fn.dataTableExt.oSort['visaNum-asc'] = function (x, y) {

            var retVal;

            if (x == y) retVal = 0;
            else if (x == "" || x == "&nbsp;") retVal = 1;
            else if (y == "" || y == "&nbsp;") retVal = -1;
            else if (x > y) retVal = 1;
            else retVal = -1;

            return retVal;
        }

        jQuery.fn.dataTableExt.oSort['visaNum-desc'] = function (x, y) {

            return ((x < y) ? 1 : ((x > y) ? -1 : 0));
        }

        jQuery.fn.dataTableExt.oSort['numOverNull-asc'] = function (a, b) {
            var x = parseInt(a);
            var y = parseInt(b);
            return ((isNaN(y) || x < y) ? -1 : ((isNaN(x) || x > y) ? 1 : 0));
        };
        jQuery.fn.dataTableExt.oSort['numOverNull-desc'] = function (a, b) {
            var x = parseInt(a);
            var y = parseInt(b);
            return ((isNaN(x) || x < y) ? 1 : ((isNaN(y) || x > y) ? -1 : 0));
        };

        $("div.dataTables_scrollBody").scrollTop(window.scrollPosition);

    });

</script>

<script>
    $(function () {
        $("[id^=AddDatePassport], [id^=CreateVisa], [id^=CreateVisaRegistrationDate], [id^=CreatePermit], [id^=CreateInsurance]").button();
    })
</script>
